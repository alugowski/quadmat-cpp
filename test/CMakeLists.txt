add_executable(tests_run quadmat/matrix_test.cpp quadmat/test_tbb_present.cpp quadmat/generators/tuple_generators_test.cpp quadmat/util/util_test.cpp quadmat/quadtree/leaf_blocks/triple_block_test.cpp quadmat/quadtree/leaf_blocks/dcsc_block_test.cpp problem_generator.h quadmat/algorithms/dcsc_accumulator_test.cpp quadmat/algorithms/spa_test.cpp quadmat/io/simple_matrix_market_test.cpp quadmat/algorithms/multiply_test.cpp quadmat/quadtree/tree_nodes_test.cpp testing_utilities.h quadmat/quadtree/block_container_test.cpp quadmat/quadtree/leaf_blocks/window_shadow_block_test.cpp quadmat/quadtree/shadow_subdivision_test.cpp quadmat/quadtree/tree_construction_test.cpp quadmat/quadtree/inner_block_test.cpp quadmat/quadtree/tree_visitors.cpp)
target_link_libraries(tests_run tbb)

if ("${CMAKE_C_COMPILER_ID}" MATCHES "(Apple)?[Cc]lang" OR "${CMAKE_CXX_COMPILER_ID}" MATCHES "(Apple)?[Cc]lang")
    message("Building with llvm Code Coverage Tools")
    set(CMAKE_CXX_FLAGS "-fprofile-instr-generate -fcoverage-mapping")
elseif (CMAKE_COMPILER_IS_GNUCXX)
    message("Building with lcov Code Coverage Tools")
    set(CMAKE_CXX_FLAGS "--coverage")
endif()